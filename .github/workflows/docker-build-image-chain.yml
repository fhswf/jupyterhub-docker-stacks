name: Builds tests and uploads all notebook images a base image (mainly cuda versions) and compatibl plattform

on:
  workflow_call:
    inputs:
      baseImage:
        description: Base images for which all notebooks should be build
        required: true
        type: string
      platform:
        description: Platfrom for which all notebooks should be build
        required: true
        type: string
      runsOn:
        description: GitHub Actions Runner image
        required: true
        type: string
      registry:
        description: Registry for uploading and tagging images, defauts to docker.io
        required: false
        type: string
        default: docker.io
      owner:
        description: Repository for uploading and tagging images, defauts to github repository
        required: false
        type: string
        default: ${{ github.repository }}
      prefix:
        description: Tag prefix for extra versioning
        required: true
        type: string

    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true

jobs:
  base:
    uses: ./.github/workflows/docker-build-test-upload.yml
    if: 
    with:
      parentImage: ${{ inputs.baseImage }}
      image: base-notebook
      platform: ${{ inputs.platform }}
      runsOn: ${{ inputs.runsOn }}
      registry: ${{ inputs.registry }}
      owner: ${{ inputs.owner }}
      prefix: ${{ inputs.prefix }}

  minimal:
    needs: [base]
    uses: ./.github/workflows/docker-build-test-upload.yml
    with:
      parentImage: base-notebook
      image: minimal-notebook
      platform: ${{ inputs.platform }}
      runsOn:  ${{ inputs.runsOn }}
      registry: ${{ inputs.registry }}
      owner: ${{ inputs.owner }}
      prefix: ${{ inputs.prefix }}

  scipy:
    needs: [minimal]
    uses: ./.github/workflows/docker-build-test-upload.yml
    with:
      parentImage: minimal-notebook
      image: scipy-notebook
      platform: ${{ inputs.platform }}
      runsOn: ${{ inputs.runsOn }}
      registry: ${{ inputs.registry }}
      owner: ${{ inputs.owner }}
      prefix: ${{ inputs.prefix }}

#  r:
#    needs: [minimal]
#    uses: ./.github/workflows/docker-build-test-upload.yml
#    with:
#      parentImage: minimal-notebook
#      image: r-notebook
#      platform: ${{ inputs.platform }}
#      runsOn: ${{ inputs.runsOn }}
#      registry: ${{ inputs.registry }}
#      owner: ${{ inputs.owner }}
#      prefix: ${{ inputs.prefix }}
      
#  datascience:
#    needs: [scipy]
#    uses: ./.github/workflows/docker-build-test-upload.yml
#    with:
#      parentImage: scipy-notebook
#      image: datascience-notebook
#      platform: ${{ inputs.platform }}
#      runsOn: ${{ inputs.runsOn }}
#      registry: ${{ inputs.registry }}
#      owner: ${{ inputs.owner }}
#      prefix: ${{ inputs.prefix }}

  tensorflow:
    needs: [scipy]
    uses: ./.github/workflows/docker-build-test-upload.yml
    with:
      parentImage: scipy-notebook
      image: tensorflow-notebook
      platform: ${{ inputs.platform }}
      runsOn: ${{ inputs.runsOn }}
      registry: ${{ inputs.registry }}
      owner: ${{ inputs.owner }}
      prefix: ${{ inputs.prefix }}

  torch:
    needs: [scipy]
    uses: ./.github/workflows/docker-build-test-upload.yml
    with:
      parentImage: scipy-notebook
      image: torch-notebook
      platform: ${{ inputs.platform }}
      runsOn: ${{ inputs.runsOn }}
      registry: ${{ inputs.registry }}
      owner: ${{ inputs.owner }}
      prefix: ${{ inputs.prefix }}
  
#  pyspark:
#    needs: [scipy]
#    uses: ./.github/workflows/docker-build-test-upload.yml
#    with:
#      parentImage: scipy-notebook
#      image: pyspark-notebook
#      platform: ${{ inputs.platform }}
#      runsOn: ${{ inputs.runsOn }}
#      registry: ${{ inputs.registry }}
#      owner: ${{ inputs.owner }}
#      prefix: ${{ inputs.prefix }}

#  all-spark:
#    needs: [pyspark]
#    uses: ./.github/workflows/docker-build-test-upload.yml
#    with:
#      parentImage: pyspark-notebook
#      image: all-spark-notebook
#      platform: ${{ inputs.platform }}
#      runsOn: ${{ inputs.runsOn }}
#      registry: ${{ inputs.registry }}
#      owner: ${{ inputs.owner }}
#      prefix: ${{ inputs.prefix }}

  # push images
  images-tag-push:
    uses: ./.github/workflows/docker-tag-manifest-push.yml
    secrets: inherit
    needs:
      [
        base,
        minimal,
        scipy,
        #r,
        #datascience,
        #pyspark,
        #all-spark,
        tensorflow,
        torch
      ]
    with:
      platform: ${{ inputs.platform }}
      # https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
      # The strategy property is not supported in any job that calls a reusable workflow
      # Using the workaround: https://github.community/t/reusable-workflow-with-strategy-matrix/205676/2
      # missing images:
          #"r-notebook",
          #"datascience-notebook",
          #"pyspark-notebook",
          #"all-spark-notebook",
      images: >-
        [
          "base-notebook",
          "minimal-notebook",
          "scipy-notebook",
          "tensorflow",
          "torch"
        ]
        
  merge-tags:
    secrets: inherit
    needs: [images-tag-push]
    uses: ./.github/workflows/docker-merge-tags.yml
    # mssing images:
          #"r-notebook",
          #"tensorflow-notebook",
          #"datascience-notebook",
          #"pyspark-notebook",
          #"all-spark-notebook",
    with:
      images: >-
        [
          "base-notebook",
          "minimal-notebook",
          "scipy-notebook",
          "tensorflow",
          "torch"
        ]

#  wiki-update:
#    permissions:
#      contents: write
#    needs: [x86_64-images-tag-push]
#    uses: ./.github/workflows/docker-wiki-update.yml