name: Build, test and push Docker Images

# This workflow starts myn builds for different image versions.
# Please note that the indiviudal images that ave to build are specified in docker-build-image-chain.yml
# As some image depend on other this is not possible to be done entirely via matrix builds, some stuff has to be hardcoded
# Launch order is this_file -> docker-build-image-chain.yml -> docker-build-test-upload.yml -> docker-tag-manifest-push.yml

env:
  REPOSITORY: ${{ github.repository }}
  REGISTRY: ghcr.io 
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

on:
  schedule:
    # Weekly, at 03:00 on Monday UTC time
    - cron: "0 3 * * 1"
  pull_request:
    paths:
      - ".github/workflows/docker.yml"
      # We use local reusable workflows to make architecture clean an simple
      # https://docs.github.com/en/actions/using-workflows/reusing-workflows
      - ".github/workflows/docker-build-test-upload.yml"
      - ".github/workflows/docker-merge-tags.yml"
      - ".github/workflows/docker-tag-manifest-push.yml"
      - ".github/workflows/docker-wiki-update.yml"

      # We use local composite actions to combine multiple workflow steps within one action
      # https://docs.github.com/en/actions/creating-actions/about-custom-actions#composite-actions
      - ".github/actions/create-dev-env/action.yml"
      - ".github/actions/download-manifests/action.yml"
      - ".github/actions/load-image/action.yml"

      - "all-spark-notebook/**"
      - "base-notebook/**"
      - "datascience-notebook/**"
      - "minimal-notebook/**"
      - "pyspark-notebook/**"
      - "r-notebook/**"
      - "scipy-notebook/**"
      - "tensorflow-notebook/**"
      - "torch-notebook/**"

      - "tagging/**"
      - "tests/**"
      - "requirements-dev.txt"
  push:
    branches:
      - main
      - dev
    paths:
      - ".github/workflows/docker.yml"
      - ".github/workflows/docker-build-test-upload.yml"
      - ".github/workflows/docker-merge-tags.yml"
      - ".github/workflows/docker-tag-manifest-push.yml"
      - ".github/workflows/docker-wiki-update.yml"

      - ".github/actions/create-dev-env/action.yml"
      - ".github/actions/download-manifests/action.yml"
      - ".github/actions/load-image/action.yml"

      - "all-spark-notebook/**"
      - "base-notebook/**"
      - "datascience-notebook/**"
      - "minimal-notebook/**"
      - "pyspark-notebook/**"
      - "r-notebook/**"
      - "scipy-notebook/**"
      - "tensorflow-notebook/**"
      - "torch-notebook/**"

      - "tagging/**"
      - "tests/**"
      - "requirements-dev.txt"
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push-cuda:
    # this will: 1. build all images, 2. create manifest
    uses: ./.github/workflows/docker-build-image-chain.yml
    if: ${{ github.head_ref || github.ref_name }}  == 'main' || ${{ github.head_ref || github.ref_name }}  == 'dev'
    strategy:
      fail-fast: false
      matrix:
        # naming convention
        # BASE_IMAGES: ["nvidia/cuda:11.7.1-cudnn8-devel-ubuntu18.04"]
        cudaVersion: [11.7.1] # older versions [" 11.6.2", "11.5.2", "11.4.3"]
        cudaVariant: [devel] # alternatives [cudnn8-runtime, runtime, cudnn8-devel, devel]
        os: [ ubuntu18.04 ] # [ ubuntu18.04, ubuntu20.04, ubuntu22.04 ]
        architecture:  [ {platform: x86_64, runner: ubuntu-latest} ] # this one is ot avaiable for us needs self-hosted runner: [{platform: aarch64, runner: ARM64}]
    secrets:
      REGISTRY_USERNAME: ${{ github.actor }}
      REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      baseImage: nvidia/cuda:${{ matrix.cudaVersion }}-${{ matrix.cudaVariant }}-${{ matrix.os }}
      platform: ${{ matrix.architecture.platform }}
      runsOn: ${{ matrix.architecture.runner }}
      registry: ghcr.io
      owner: ${{ github.repository }}
      prefix: ${{ github.head_ref || github.ref_name }}-cuda${{ matrix.cudaVersion }}-${{ matrix.cudaVariant }}-${{ matrix.os }}

  build-push:
  # the same tihout cuda base images, here its just ubuntu
    uses: ./.github/workflows/docker-build-image-chain.yml
    if: ${{ github.head_ref || github.ref_name }}  == 'main' || ${{ github.head_ref || github.ref_name }}  == 'dev'
    strategy:
      fail-fast: false
      matrix:
        osBase: [ "ubuntu" ] # [ ubuntu18.04, ubuntu20.04, ubuntu22.04 ]
        osVersion: [ "18.04" ]
        architecture:  [ {platform: x86_64, runner: ubuntu-latest} ] # this one is ot avaiable for us needs self-hosted runner: [{platform: aarch64, runner: ARM64}]
    secrets:
      REGISTRY_USERNAME: ${{ github.actor }}
      REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      baseImage: ${{ matrix.osBase }}:${{matrix.osVersion}}
      platform: ${{ matrix.architecture.platform }}
      runsOn: ${{ matrix.architecture.runner }}
      registry: ghcr.io
      owner: ${{ github.repository }}
      prefix: ${{ github.head_ref || github.ref_name }}-${{ matrix.osBase }}${{matrix.osVersion}}
    
  #merge-tags:
  #  secrets:
  #    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  #  needs: [aarch64-images-tag-push, x86_64-images-tag-push]
  #  uses: ./.github/workflows/docker-merge-tags.yml
  #  with:
  #    images: >-
  #      [
  #        "base-notebook",
  #        "minimal-notebook",
  #        "scipy-notebook",
  #        "r-notebook",
  #        "tensorflow-notebook",
  #        "datascience-notebook",
  #        "pyspark-notebook",
  #        "all-spark-notebook"
  #      ]

  #wiki-update:
  #  permissions:
  #    contents: write
  #  needs: [aarch64-images-tag-push, x86_64-images-tag-push]
  #  uses: ./.github/workflows/docker-wiki-update.yml
